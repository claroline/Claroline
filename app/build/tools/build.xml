<?xml version="1.0" encoding="UTF-8"?>

<!-- Ant build file used for Claronext's Jenkins job. See http://jenkins-php.org/ -->

<project name="Claronext" default="build" basedir="./../../../">

    <property name="appdir" value="${basedir}/app"/>
    <property name="srcdir" value="${basedir}/src"/>
    <property name="builddir" value="${appdir}/build"/>

    <target name="build" depends="clean,rawInstall,parallelTasks,phpunit,phpcb"/>

    <target name="clean"
            description="Remove logs and plugin config files, clean up and create artifact directories">
        <delete file="${appdir}/config/local/plugin/bundles"/>
        <delete file="${appdir}/config/local/plugin/namespaces"/>
        <delete file="${appdir}/config/local/plugin/routing.yml"/>
        <delete file="${appdir}/logs/test.log"/>

        <delete dir="${builddir}/api"/>
        <delete dir="${builddir}/code-browser"/>
        <delete dir="${builddir}/logs"/>
        <delete dir="${builddir}/pdepend"/>

        <mkdir dir="${builddir}/api"/>
        <mkdir dir="${builddir}/code-browser"/>
        <mkdir dir="${builddir}/logs"/>
        <mkdir dir="${builddir}/pdepend"/>
    </target>

    <target name="rawInstall"
            description="Install vendors, create database, tables, config files, install plugins">
        <touch file="${appdir}/config/local/plugin/bundles"/>
        <touch file="${appdir}/config/local/plugin/namespaces"/>
        <touch file="${appdir}/config/local/plugin/routing.yml"/>
        <exec executable="composer" failonerror="true">
            <arg value="install" />
            <arg value="--dev" />
            <arg value="--prefer-source" />
        </exec>
        <exec executable="php" failonerror="true">
            <arg path="${appdir}/console" />
            <arg value="doctrine:database:drop" />
            <arg value="--force" />
            <arg value="--env=test" />
        </exec>
        <exec executable="php" failonerror="true">
            <arg path="${appdir}/console" />
            <arg value="doctrine:database:create" />
            <arg value="--env=test" />
        </exec>
        <exec executable="php" failonerror="true">
            <arg path="${appdir}/console" />
            <arg value="claroline:install" />
            <arg value="--with-fixtures" />
            <arg value="--with-plugins" />
            <arg value="--env=test" />
        </exec>
        <exec executable="php" failonerror="true">
            <arg path="${appdir}/console" />
            <arg value="cache:clear" />
            <arg value="--no-warmup" />
            <arg value="--env=test" />
        </exec>
    </target>

    <target name="phpunit"
            description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
        <exec executable="phpunit" failonerror="true">
            <arg value="-c" />
            <arg path="${appdir}/phpunit.xml" />
            <arg value="--log-junit" />
            <arg path="${appdir}/build/logs/junit.xml" />
            <arg value="--verbose" />
        </exec>
    </target>

    <target name="parallelTasks"
            description="Run the pdepend, phpmd, phpcpd, phpcs, phpdoc, phploc, jshint and jslint tasks in parallel using a maximum of 2 threads.">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs"/>
            <antcall target="phpdoc"/>
            <antcall target="phploc"/>
            <antcall target="jshint"/>
            <antcall target="jslint"/>
        </parallel>
    </target>

    <target name="pdepend"
            description="Generate jdepend.xml and software metrics charts using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${builddir}/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${builddir}/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${builddir}/pdepend/overview-pyramid.svg" />
            <arg path="${srcdir}" />
        </exec>
    </target>

    <target name="phpmd"
            description="Generate pmd.xml using PHPMD">
        <exec executable="phpmd">
            <arg path="${srcdir}" />
            <arg value="xml" />
            <arg value="${appdir}/build/tools/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${builddir}/logs/pmd.xml" />
        </exec>
    </target>

    <target name="phpcpd"
            description="Generate pmd-cpd.xml using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${builddir}/logs/pmd-cpd.xml" />
            <arg path="${srcdir}" />
        </exec>
    </target>

    <target name="phploc"
            description="Generate phploc.csv">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${builddir}/logs/phploc.csv" />
            <arg path="${srcdir}" />
        </exec>
    </target>

    <target name="phpcs"
            description="Generate checkstyle.xml using PHP_CodeSniffer">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${builddir}/logs/checkstyle.xml" />
            <arg value="--standard=${appdir}/build/tools/phpcs.xml" />
            <arg path="${srcdir}" />
        </exec>
    </target>

    <target name="phpdoc"
            description="Generate API documentation using PHPDocumentor">
        <exec executable="phpdoc">
            <arg value="--quiet" />
            <arg value="--ignore" />
            <arg path="${srcdir}/*/Claroline/*/Tests/*,${srcdir}/*/Claroline/*/Resources/*,${srcdir}/*/Claroline/*/Migrations/*" />
            <arg value="--directory" />
            <arg path="${srcdir}/core/Claroline,${srcdir}/plugin/Claroline" />
            <arg value="--target" />
            <arg path="${builddir}/api" />
        </exec>
    </target>

    <target name="phpcb"
         description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${builddir}/logs" />
            <arg value="--source" />
            <arg path="${srcdir}" />
            <arg value="--output" />
            <arg path="${builddir}/code-browser" />
        </exec>
    </target>

    <target name="jshint"
         description="Generate checkstyle-jshint.xml using JSHint">
        <exec executable="jshint" output="${builddir}/logs/checkstyle-jshint.xml">
            <arg value="--reporter=${appdir}/dev/checkstyle-errors.js" />
            <arg value="--config" />
            <arg path="${appdir}/build/tools/jshint.json" />
            <arg path="${srcdir}" />
        </exec>
    </target>

    <target name="jslint"
         description="Generate jslint.xml using JSHint">
        <exec executable="jshint" output="${builddir}/logs/jslint.xml">
            <arg value="--reporter=jslint" />
            <arg value="--config" />
            <arg path="${appdir}/build/tools/jshint.json" />
            <arg path="${srcdir}" />
        </exec>
    </target>
</project>