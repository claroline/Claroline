security:
    providers:
        user_db:
            entity: { class: Claroline\CoreBundle\Entity\User }

    password_hashers:
        # Use native password hasher, which auto-selects and migrates the best
        # possible hashing algorithm (which currently is "bcrypt")
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            # share the same context for all our firewalls to be able to retrieve the user session when we switch between firewalls
            context: claroline
            pattern: ^/
            logout:
                path:   /logout
                target: /
            switch_user: { role: ROLE_ALLOWED_TO_SWITCH, parameter: _switch }
            user_checker: Claroline\CoreBundle\Security\UserChecker

            login_throttling:
                max_attempts: 3

            custom_authenticators:
                - Claroline\AuthenticationBundle\Security\Authentication\IpAuthenticator
                - Claroline\AuthenticationBundle\Security\Authentication\ApiTokenAuthenticator

            # Allows JSON authentication
            json_login:
                check_path: /login
                success_handler: Claroline\CoreBundle\Listener\AuthenticationSuccessListener
                failure_handler: Claroline\CoreBundle\Listener\AuthenticationFailureHandler

    access_decision_manager:
        allow_if_all_abstain: false

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/connect, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/saml, roles: IS_AUTHENTICATED_ANONYMOUSLY }
