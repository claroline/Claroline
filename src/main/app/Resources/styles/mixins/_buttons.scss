@use "sass:math";

@mixin button-base() {
  display: inline-block;
  margin-bottom: 0; // For input.btn
  font-weight: $btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border-width: 1px;
  border-style: solid;
  white-space: nowrap;
  user-select: none;
  @include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-base, $btn-border-radius-base);

  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      @include tab-focus();
    }
  }

  &:hover,
  &:focus,
  &.focus {
    text-decoration: none;
  }

  &:active,
  &.active {
    outline: 0;
    background-image: none;

    @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
    opacity: .65;

    @include box-shadow(none);
  }

  &a {
    &.disabled,
    fieldset[disabled] & {
      pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
    }
  }
}

@mixin button-link-base() {
  @include button-base();

  font-weight: normal;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      text-decoration: none;
    }
  }
}

// expose a mixin to generate button links variant (this is not down by bootstrap)
@mixin button-link-variant($color, $hover-color, $hover-decoration: none) {
  color: $color;

  &:hover,
  &:focus {
    color: $hover-color;
    text-decoration: $hover-decoration;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: $color;
    }
  }
}

@mixin button-toggle-size($outer-padding, $padding-vertical, $font-size, $line-height) {
  $inner-padding: max($padding-vertical - $outer-padding, 0);
  $handle-size: ceil(($font-size * $line-height) + ($inner-padding * 2));

  padding: $outer-padding;
  border-radius: math.div($handle-size, 2) + $outer-padding + 1;

  .fa {
    padding: $inner-padding;
    line-height: $line-height;
    height: $handle-size;
    width: $handle-size;
    border-radius: math.div($handle-size, 2);

    transition: margin .25s ease-in-out;
  }

  &[aria-pressed=false] {
    .fa {
      margin-right: $handle-size + $outer-padding;
    }
  }

  &[aria-pressed=true] {
    .fa {
      margin-left: $handle-size + $outer-padding;
    }
  }
}

@mixin button-toggle-color($color, $border-color) {
  &[aria-pressed=false] {
    @include button-variant($input-bg-disabled, $input-bg-disabled, $input-border);
  }

  &[aria-pressed=true] {
    background-color: $color;
    border-color: $border-color;

    .fa {
      color: $color;
    }
  }
}
