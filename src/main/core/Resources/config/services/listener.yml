services:
    _defaults:
        autowire: false
        autoconfigure: false
        public: true #because lazy

    Claroline\CoreBundle\Listener\Administration\CommunityListener:
        arguments:
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@Claroline\CoreBundle\API\Serializer\ParametersSerializer'
            - '@Claroline\CoreBundle\API\Serializer\User\ProfileSerializer'
            - '@claroline.manager.resource_manager'
            - '@Claroline\CoreBundle\Manager\UserManager'
        tags:
            - { name: kernel.event_listener, event: administration_tool_community, method: onDisplayTool }
            - { name: kernel.event_listener, event: merge_users, method: onMergeUsers }

    Claroline\CoreBundle\Listener\Administration\IntegrationListener:
        tags:
            - { name: kernel.event_listener, event: administration_tool_integration, method: onDisplayTool }

    Claroline\CoreBundle\Listener\Administration\ParametersListener:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\CoreBundle\API\Serializer\ParametersSerializer'
            - '@Claroline\CoreBundle\Manager\LocaleManager'
            - '@claroline.manager.icon_set_manager'
        tags:
            - { name: kernel.event_listener, event: administration_tool_main_settings, method: onDisplayTool }

    Claroline\CoreBundle\Listener\Administration\ScheduledTaskListener:
        arguments:
            - '@Claroline\CoreBundle\API\Serializer\ParametersSerializer'
        tags:
            - { name: kernel.event_listener, event: administration_tool_tasks_scheduling, method: onDisplayTool }

    Claroline\CoreBundle\Listener\Administration\TemplateListener:
        tags:
            - { name: kernel.event_listener, event: administration_tool_templates_management, method: onAdministrationToolOpen }

    Claroline\CoreBundle\Listener\Administration\TransferListener:
        arguments:
            - '@Claroline\AppBundle\API\TransferProvider'
        tags:
            - { name: kernel.event_listener, event: administration_tool_transfer, method: onDisplayTool }

    Claroline\CoreBundle\Listener\DataSource\Workspace\AllSource:
        arguments:
            - '@Claroline\AppBundle\API\FinderProvider'
        tags:
            - { name: kernel.event_listener, event: data_source.workspaces.load, method: getData }

    Claroline\CoreBundle\Listener\DataSource\Workspace\RegisteredSource:
        arguments:
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@security.token_storage'
        tags:
            - { name: kernel.event_listener, event: data_source.my_workspaces.load, method: getData }

    Claroline\CoreBundle\Listener\DataSource\AdminToolSource:
        arguments:
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@security.token_storage'
        tags:
            - { name: kernel.event_listener, event: data_source.admin_tools.load, method: getData }

    Claroline\CoreBundle\Listener\DataSource\ResourceSource:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@security.token_storage'
        tags:
            - { name: kernel.event_listener, event: data_source.resources.load, method: getData }

    Claroline\CoreBundle\Listener\DataSource\ToolSource:
        arguments:
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@security.token_storage'
            - '@claroline.manager.workspace_manager'
        tags:
            - { name: kernel.event_listener, event: data_source.tools.load, method: getData }

    Claroline\CoreBundle\Listener\DataSource\UserSource:
        arguments:
            - '@Claroline\AppBundle\API\FinderProvider'
        tags:
            - { name: kernel.event_listener, event: data_source.users.load, method: getData }

    Claroline\CoreBundle\Listener\Log\LogListener:
        public: true
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@security.token_storage'
            - '@request_stack'
            - '@service_container'
            - '@claroline.manager.role_manager'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\CoreBundle\Manager\LogConnectManager'
        tags:
            - { name: kernel.event_listener, event: log, method: onLog }
            - { name: kernel.event_listener, event: create_log_list_item, method: onLogListItem }
            - { name: kernel.event_listener, event: create_log_details, method: onLogDetails }

    Claroline\CoreBundle\Listener\Notification\NotificationUserParametersListener:
        tags:
            - { name: kernel.event_listener, event: icap_notification_user_parameters_event, method: onGetTypesForParameters }

    Claroline\CoreBundle\Listener\Resource\Types\DirectoryListener:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@Claroline\AppBundle\API\Crud'
            - '@claroline.manager.resource_manager'
            - '@Claroline\CoreBundle\Manager\Resource\ResourceActionManager'
            - '@claroline.manager.rights_manager'
            - '@Claroline\CoreBundle\API\Serializer\ParametersSerializer'
        tags:
            - { name: kernel.event_listener, event: resource.directory.load, method: onLoad }
            - { name: kernel.event_listener, event: resource.directory.add, method: onAdd }

    Claroline\CoreBundle\Listener\Resource\Types\FileListener:
        arguments:
            - '@security.token_storage'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '%claroline.param.files_directory%'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@claroline.manager.resource_manager'
            - '@claroline.manager.resource_evaluation_manager'
            - '@Claroline\CoreBundle\Library\Utilities\FileUtilities'
        tags:
            - { name: kernel.event_listener, event: resource.file.load, method: onLoad }
            - { name: kernel.event_listener, event: resource.file.change_file, method: onFileChange }
            - { name: kernel.event_listener, event: resource.file.delete, method: onDelete }
            - { name: kernel.event_listener, event: transfer.file.import.before, method: onImportBefore }
            - { name: kernel.event_listener, event: transfer.file.export, method: onExportFile }
            - { name: kernel.event_listener, event: transfer.file.import.after, method: onImportFile }
            - { name: kernel.event_listener, event: resource.file.copy, method: onCopy }
            - { name: kernel.event_listener, event: download_file, method: onDownload }
            - { name: kernel.event_listener, event: generate_resource_user_evaluation_file, method: onGenerateResourceTracking }

    Claroline\CoreBundle\Listener\Resource\Types\TextListener:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@Claroline\CoreBundle\Manager\Template\PlaceholderManager'
        tags:
            - { name: kernel.event_listener, event: resource.text.load, method: load }

    Claroline\CoreBundle\Listener\Resource\ResourceListener:
        arguments:
            - '@security.token_storage'
            - '@Claroline\AppBundle\API\Crud'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@claroline.manager.resource_manager'
            - '@Claroline\CoreBundle\Manager\Resource\ResourceLifecycleManager'
            - '@claroline.manager.resource_evaluation_manager'
        tags:
            - { name: kernel.event_listener, event: resource_load, method: load }
            - { name: kernel.event_listener, event: resource.create, method: create }
            - { name: kernel.event_listener, event: resource.about, method: about }
            - { name: kernel.event_listener, event: resource.configure, method: configure }
            - { name: kernel.event_listener, event: resource.rights, method: rights }
            - { name: kernel.event_listener, event: resource.edit, method: edit }
            - { name: kernel.event_listener, event: resource.publish, method: publish }
            - { name: kernel.event_listener, event: resource.unpublish, method: unpublish }
            - { name: kernel.event_listener, event: resource.export, method: export }
            - { name: kernel.event_listener, event: resource.delete, method: delete }
            - { name: kernel.event_listener, event: resource.restore, method: restore }
            - { name: kernel.event_listener, event: resource.copy, method: copy }
            - { name: kernel.event_listener, event: resource.move, method: move }

    Claroline\CoreBundle\Listener\Tool\CommunityListener:
        arguments:
            - '@Claroline\CoreBundle\API\Serializer\ParametersSerializer'
            - '@Claroline\CoreBundle\API\Serializer\User\ProfileSerializer'
            - '@Claroline\CoreBundle\Manager\UserManager'
        tags:
            - { name: kernel.event_listener, event: open_tool_workspace_community, method: onDisplayWorkspace }
            - { name: kernel.event_listener, event: open_tool_desktop_community, method: onDisplayDesktop }

    Claroline\CoreBundle\Listener\Tool\DataTransferListener:
        arguments:
            - '@Claroline\AppBundle\API\TransferProvider'
            - '@Claroline\AppBundle\API\SerializerProvider'
        tags:
            - { name: kernel.event_listener, event: open_tool_workspace_transfer, method: onDisplayWorkspace }

    Claroline\CoreBundle\Listener\Tool\ResourcesListener:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\SerializerProvider'
        tags:
            - { name: kernel.event_listener, event: open_tool_desktop_resources, method: onDisplayDesktop }
            - { name: kernel.event_listener, event: open_tool_workspace_resources, method: onDisplayWorkspace }

    Claroline\CoreBundle\Listener\Tool\TrashListener:
        tags:
            - { name: kernel.event_listener, event: open_tool_workspace_resource_trash, method: onDisplayWorkspace }

    Claroline\CoreBundle\Listener\Tool\WorkspacesListener:
        arguments:
            - '@security.token_storage'
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@security.authorization_checker'
        tags:
            - { name: kernel.event_listener, event: open_tool_desktop_workspaces, method: onDisplayDesktop }

    Claroline\CoreBundle\Listener\Workspace\EvaluationListener:
        arguments:
            - '@Claroline\CoreBundle\Manager\Workspace\EvaluationManager'
        tags:
            - { name: kernel.event_listener, event: resource_evaluation, method: onResourceEvaluation }
            - { name: kernel.event_listener, event: log, method: onLog }
            - { name: kernel.event_listener, event: crud_post_collection_patch_object_claroline_corebundle_entity_role, method: onRoleChange }
            - { name: kernel.event_listener, event: crud_post_collection_patch_object_claroline_corebundle_entity_group, method: groupUsersPostCollectionPatch }

    Claroline\CoreBundle\Listener\ViewAsListener:
        arguments:
            - '@security.authorization_checker'
            - '@security.token_storage'
            - '@Claroline\AuthenticationBundle\Security\Authentication\Authenticator'
            - '@claroline.manager.role_manager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onViewAs, priority: 2 }

    Claroline\CoreBundle\Listener\PlatformListener:
        arguments:
            - '@security.token_storage'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@claroline.manager.temp_file'
            - '@Claroline\CoreBundle\Manager\LocaleManager'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: setLocale, priority: 17 }
            - { name: kernel.event_listener, event: kernel.request, method: checkAvailability }
            - { name: kernel.event_listener, event: kernel.terminate, method: clearTemp }

    Claroline\CoreBundle\Listener\CliListener:
        arguments:
            - '@Claroline\AuthenticationBundle\Security\Authentication\Authenticator'
            - '@Claroline\CoreBundle\Manager\UserManager'
        tags:
            - { name: kernel.event_listener, event: console.command, method: setDefaultUser, priority: 17 }

    Claroline\CoreBundle\Listener\AuthenticationSuccessListener:
        arguments:
            - '@security.token_storage'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@Claroline\CoreBundle\Library\RoutingHelper'
            - '@Claroline\AppBundle\Manager\PlatformManager'
            - '@Claroline\CoreBundle\Manager\UserManager'
            - '@Claroline\CoreBundle\Manager\Tool\ToolManager'
            - '@Claroline\CoreBundle\Manager\ConnectionMessageManager'

    Claroline\CoreBundle\Listener\Entity\UserListener:
        arguments:
            - '@security.encoder_factory'
        tags: ['doctrine.entity_listener']

    Claroline\CoreBundle\Listener\Doctrine\DebugListener:
        public: true
        calls:
            - setLogger: [ '@logger' ]
        tags:
            - { name: doctrine.event_listener, event: onFLush }

    Claroline\CoreBundle\Doctrine\EntityListenerResolver:
        arguments:
            - '@service_container'

    Claroline\CoreBundle\Listener\Log\GroupListener:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\API\SerializerProvider'
        tags:
            - { name: kernel.event_listener, event: crud.post.create.group, method: onGroupCreate }
            - { name: kernel.event_listener, event: crud.post.update.group, method: onGroupUpdate }
            - { name: kernel.event_listener, event: crud.post.delete.group, method: onGroupDelete }
            - { name: kernel.event_listener, event: crud.post.patch.group, method: onGroupPatch }

    Claroline\CoreBundle\Listener\Log\ResourceListener:
        arguments:
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\SerializerProvider'
        tags:
            - { name: kernel.event_listener, event: resource_load, method: onResourceLoad }
            - { name: kernel.event_listener, event: crud.post.create.resource_node, method: onResourceCreate }
            - { name: kernel.event_listener, event: crud.pre.delete.resource_node, method: onResourceDelete }
            - { name: kernel.event_listener, event: crud.post.copy.resource_node, method: onResourceCopy }
            - { name: kernel.event_listener, event: crud.post.update.resource_node, method: onResourceUpdate }

    Claroline\CoreBundle\Listener\Log\WorkspaceListener:
        arguments:
            - '@Claroline\AppBundle\Event\StrictDispatcher'
        tags:
            - { name: kernel.event_listener, event: crud.post.create.workspace, method: onWorkspacePostCreate }
            - { name: kernel.event_listener, event: crud.pre.delete.workspace, method: onWorkspacePreDelete, priority: 1 }

    Claroline\CoreBundle\Listener\Log\UserListener:
        arguments:
            - '@Claroline\AppBundle\Event\StrictDispatcher'
        tags:
            - { name: kernel.event_listener, event: crud.post.create.user, method: onUserCreate }
            - { name: kernel.event_listener, event: crud.pre.delete.user, method: onUserDelete, priority: 1 }
            - { name: kernel.event_listener, event: crud.post.patch.user, method: onUserPatch }

    Claroline\CoreBundle\Listener\Log\RoleListener:
        arguments:
            - '@Claroline\AppBundle\Event\StrictDispatcher'
        tags:
            - { name: kernel.event_listener, event: crud.post.patch.role, method: onRolePatch }
