services:
    _defaults:
        autowire: false
        autoconfigure: false
        public: true #because lazy

    Claroline\CoreBundle\Listener\Administration\IntegrationListener:
        tags:
            - { name: kernel.event_listener, event: tool.open.administration.integration, method: onDisplayTool }

    Claroline\CoreBundle\Listener\Administration\ParametersListener:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\CoreBundle\API\Serializer\ParametersSerializer'
            - '@Claroline\CoreBundle\Manager\LocaleManager'
            - '@Claroline\ThemeBundle\Manager\IconSetManager'
        tags:
            - { name: kernel.event_listener, event: tool.open.administration.main_settings, method: onDisplayTool }

    Claroline\CoreBundle\Listener\Administration\TemplateListener:
        tags:
            - { name: kernel.event_listener, event: tool.open.administration.templates, method: onAdministrationToolOpen }

    Claroline\CoreBundle\Listener\DataSource\Workspace\AllSource:
        arguments:
            - '@security.authorization_checker'
            - '@security.token_storage'
            - '@Claroline\AppBundle\API\FinderProvider'
        tags:
            - { name: kernel.event_listener, event: data_source.workspaces.load, method: getData }

    Claroline\CoreBundle\Listener\DataSource\Workspace\RegisteredSource:
        arguments:
            - '@security.token_storage'
            - '@Claroline\AppBundle\API\FinderProvider'
        tags:
            - { name: kernel.event_listener, event: data_source.my_workspaces.load, method: getData }

    Claroline\CoreBundle\Listener\DataSource\AdminToolSource:
        arguments:
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@security.token_storage'
        tags:
            - { name: kernel.event_listener, event: data_source.admin_tools.load, method: getData }

    Claroline\CoreBundle\Listener\DataSource\ResourceSource:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@security.token_storage'
        tags:
            - { name: kernel.event_listener, event: data_source.resources.load, method: getData }

    Claroline\CoreBundle\Listener\DataSource\ToolSource:
        arguments:
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@security.token_storage'
            - '@claroline.manager.workspace_manager'
        tags:
            - { name: kernel.event_listener, event: data_source.tools.load, method: getData }

    Claroline\CoreBundle\Listener\DataSource\UserSource:
        arguments:
            - '@security.authorization_checker'
            - '@security.token_storage'
            - '@Claroline\AppBundle\API\FinderProvider'
        tags:
            - { name: kernel.event_listener, event: data_source.users.load, method: getData }

    Claroline\CoreBundle\Listener\Log\LogListener:
        public: true
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@security.token_storage'
            - '@request_stack'
            - '@service_container'
            - '@claroline.manager.role_manager'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\CoreBundle\Manager\LogConnectManager'
        tags:
            - { name: kernel.event_listener, event: log, method: onLog }
            - { name: kernel.event_listener, event: create_log_list_item, method: onLogListItem }
            - { name: kernel.event_listener, event: create_log_details, method: onLogDetails }

    Claroline\CoreBundle\Listener\Notification\NotificationUserParametersListener:
        tags:
            - { name: kernel.event_listener, event: icap_notification_user_parameters_event, method: onGetTypesForParameters }

    Claroline\CoreBundle\Listener\Resource\Types\DirectoryListener:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@Claroline\AppBundle\API\Crud'
            - '@Claroline\CoreBundle\Manager\FileManager'
            - '@claroline.manager.resource_manager'
            - '@Claroline\CoreBundle\Manager\Resource\ResourceActionManager'
            - '@claroline.manager.rights_manager'
        tags:
            - { name: kernel.event_listener, event: resource.directory.load, method: onLoad }
            - { name: kernel.event_listener, event: resource.directory.add, method: onAdd }
            - { name: kernel.event_listener, event: resource.directory.add_files, method: onAddFiles }
            - { name: kernel.event_listener, event: resource.directory.delete, method: onDelete }

    Claroline\CoreBundle\Listener\Resource\Types\FileListener:
        arguments:
            - '@security.token_storage'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@claroline.manager.resource_manager'
            - '@Claroline\CoreBundle\Manager\FileManager'
        tags:
            - { name: kernel.event_listener, event: resource.file.load, method: onLoad }
            - { name: kernel.event_listener, event: resource.file.change_file, method: onFileChange }
            - { name: kernel.event_listener, event: resource.file.delete, method: onDelete }
            - { name: kernel.event_listener, event: resource.file.export, method: onExport }
            - { name: kernel.event_listener, event: resource.file.import, method: onImport }
            - { name: kernel.event_listener, event: crud.pre.copy.file, method: onCopy }
            - { name: kernel.event_listener, event: download_file, method: onDownload }

    Claroline\CoreBundle\Listener\Resource\Types\TextListener:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@Claroline\CoreBundle\Manager\Template\PlaceholderManager'
        tags:
            - { name: kernel.event_listener, event: resource.text.load, method: load }

    Claroline\CoreBundle\Listener\Resource\ResourceListener:
        arguments:
            - '@security.token_storage'
            - '@Claroline\AppBundle\API\Crud'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@claroline.manager.resource_manager'
            - '@Claroline\CoreBundle\Manager\Resource\ResourceLifecycleManager'
        tags:
            - { name: kernel.event_listener, event: resource_load, method: load }
            - { name: kernel.event_listener, event: resource.create, method: create }
            - { name: kernel.event_listener, event: resource.about, method: about }
            - { name: kernel.event_listener, event: resource.configure, method: configure }
            - { name: kernel.event_listener, event: resource.rights, method: rights }
            - { name: kernel.event_listener, event: resource.edit, method: edit }
            - { name: kernel.event_listener, event: resource.publish, method: publish }
            - { name: kernel.event_listener, event: resource.unpublish, method: unpublish }
            - { name: kernel.event_listener, event: resource.export, method: export }
            - { name: kernel.event_listener, event: resource.delete, method: delete }
            - { name: kernel.event_listener, event: resource.restore, method: restore }
            - { name: kernel.event_listener, event: resource.copy, method: copy }
            - { name: kernel.event_listener, event: resource.move, method: move }

    Claroline\CoreBundle\Listener\ViewAsListener:
        arguments:
            - '@security.authorization_checker'
            - '@security.token_storage'
            - '@Claroline\AuthenticationBundle\Security\Authentication\Authenticator'
            - '@claroline.manager.role_manager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onViewAs, priority: 2 }

    Claroline\CoreBundle\Listener\PlatformListener:
        arguments:
            - '@security.token_storage'
            - '@translator'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\CoreBundle\Manager\VersionManager'
            - '@Claroline\AppBundle\Manager\File\TempFileManager'
            - '@Claroline\CoreBundle\Manager\LocaleManager'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: setLocale, priority: 17 }
            - { name: kernel.event_listener, event: kernel.request, method: checkAvailability }
            - { name: kernel.event_listener, event: kernel.terminate, method: clearTemp }
            - { name: kernel.event_listener, event: platform.connection_messages.populate, method: displayVersionChangeLogs }

    Claroline\CoreBundle\Listener\CommandListener:
        arguments:
            - '@translator'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\AuthenticationBundle\Security\Authentication\Authenticator'
            - '@Claroline\CoreBundle\Manager\UserManager'
        tags:
            - { name: kernel.event_listener, event: console.command, method: setDefaultUser, priority: 17 }
            - { name: kernel.event_listener, event: console.command, method: setLocale, priority: 16 }

    Claroline\CoreBundle\Listener\AuthenticationSuccessListener:
        arguments:
            - '@security.token_storage'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@Claroline\CoreBundle\Library\RoutingHelper'
            - '@Claroline\AppBundle\Manager\PlatformManager'
            - '@Claroline\CoreBundle\Manager\UserManager'
            - '@Claroline\CoreBundle\Manager\Tool\ToolManager'
            - '@Claroline\CoreBundle\Manager\ConnectionMessageManager'

    Claroline\CoreBundle\Listener\Entity\UserListener:
        arguments:
            - '@security.encoder_factory'
        tags:
            - { name: 'doctrine.orm.entity_listener', entity: 'Claroline\CoreBundle\Entity\User', event: 'prePersist' }
            - { name: 'doctrine.orm.entity_listener', entity: 'Claroline\CoreBundle\Entity\User', event: 'preUpdate' }

    Claroline\CoreBundle\Listener\Log\GroupListener:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\API\SerializerProvider'
        tags:
            - { name: kernel.event_listener, event: crud.post.create.group, method: onGroupCreate }
            - { name: kernel.event_listener, event: crud.post.update.group, method: onGroupUpdate }
            - { name: kernel.event_listener, event: crud.post.delete.group, method: onGroupDelete }

    Claroline\CoreBundle\Listener\Log\ResourceListener:
        arguments:
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\SerializerProvider'
        tags:
            - { name: kernel.event_listener, event: resource_load, method: onResourceLoad }
            - { name: kernel.event_listener, event: crud.post.create.resource_node, method: onResourceCreate }
            - { name: kernel.event_listener, event: crud.pre.delete.resource_node, method: onResourceDelete }
            - { name: kernel.event_listener, event: crud.post.copy.resource_node, method: onResourceCopy }
            - { name: kernel.event_listener, event: crud.post.update.resource_node, method: onResourceUpdate }

    Claroline\CoreBundle\Listener\Log\WorkspaceListener:
        arguments:
            - '@Claroline\AppBundle\Event\StrictDispatcher'
        tags:
            - { name: kernel.event_listener, event: crud.post.create.workspace, method: onWorkspacePostCreate }
            - { name: kernel.event_listener, event: crud.pre.delete.workspace, method: onWorkspacePreDelete, priority: 1 }

    Claroline\CoreBundle\Listener\Log\UserListener:
        arguments:
            - '@Claroline\AppBundle\Event\StrictDispatcher'
        tags:
            - { name: kernel.event_listener, event: crud.post.create.user, method: onUserCreate }
            - { name: kernel.event_listener, event: crud.pre.delete.user, method: onUserDelete, priority: 1 }

    Claroline\CoreBundle\Listener\Log\RoleListener:
        arguments:
            - '@Claroline\AppBundle\Event\StrictDispatcher'
        tags:
            - { name: kernel.event_listener, event: crud.post.patch.role, method: onRolePatch }
