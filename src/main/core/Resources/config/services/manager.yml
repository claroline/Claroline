services:
    _defaults:
        autoconfigure: false
        public: false

    Claroline\CoreBundle\Manager\Workspace\WorkspaceUserQueueManager:
        arguments:
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\Crud'

    Claroline\CoreBundle\Manager\WidgetManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\CoreBundle\Manager\PluginManager'

    Claroline\CoreBundle\Manager\VersionManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '%kernel.project_dir%'
        calls:
            - setLogger: [ '@logger' ]

    Claroline\CoreBundle\Manager\UserManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\Crud'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@messenger.default_bus'

    claroline.manager.user_manager:
        alias: Claroline\CoreBundle\Manager\UserManager
        public: true

    Claroline\CoreBundle\Manager\Tool\ToolRightsManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'

    Claroline\CoreBundle\Manager\Tool\ToolMaskDecoderManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'

    Claroline\CoreBundle\Manager\Tool\ToolManager:
        public: true
        arguments:
            - '@security.authorization_checker'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\CoreBundle\Manager\Tool\ToolMaskDecoderManager'
            - '@Claroline\CoreBundle\Manager\Tool\ToolRightsManager'
        calls:
            - setLogger: [ '@logger' ]

    claroline.manager.tool_manager:
        alias: Claroline\CoreBundle\Manager\Tool\ToolManager
        public: true

    Claroline\CoreBundle\Manager\RoleManager:
        public: true
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'

    claroline.manager.role_manager:
        alias: Claroline\CoreBundle\Manager\RoleManager
        public: true

    Claroline\CoreBundle\Manager\ResourceManager:
        arguments:
            - '@security.authorization_checker'
            - '@claroline.manager.rights_manager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\CoreBundle\Library\Utilities\ClaroUtilities'
            - '@Claroline\AppBundle\API\Crud'
            - '@claroline.manager.temp_file'
            - '@security.helper'
        calls:
            - setLogger: ['@logger']

    claroline.manager.resource_manager:
        alias: Claroline\CoreBundle\Manager\ResourceManager
        public: true

    Claroline\CoreBundle\Manager\PluginManager:
        arguments:
            - '%kernel.project_dir%/app'
            - '%claroline.param.bundle_file%'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@kernel'

    claroline.manager.plugin_manager:
        alias: Claroline\CoreBundle\Manager\PluginManager
        public: true

    Claroline\CoreBundle\Manager\MailManager:
        arguments:
            - '@Claroline\CoreBundle\Library\Mailing\Mailer'
            - '@router'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\CoreBundle\Manager\Template\TemplateManager'
            - '@Claroline\CoreBundle\Manager\LocaleManager'
            - '@Claroline\CoreBundle\Manager\UserManager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'

    Claroline\CoreBundle\Manager\LogManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@translator'
            - '@Claroline\CoreBundle\Library\Utilities\ClaroUtilities'
            - '@event_dispatcher'

    Claroline\CoreBundle\Manager\LogConnectManager:
        arguments:
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\EvaluationBundle\Manager\WorkspaceEvaluationManager'
            - '@Claroline\EvaluationBundle\Manager\ResourceEvaluationManager'
            - '@translator'
            - '@Claroline\AppBundle\Event\StrictDispatcher'

    Claroline\CoreBundle\Manager\LockManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@security.authorization_checker'
            - '@security.token_storage'

    Claroline\CoreBundle\Manager\LocaleManager:
        arguments:
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\CoreBundle\Manager\UserManager'
            - '@security.token_storage'

    Claroline\CoreBundle\Manager\FileManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '%claroline.param.files_directory%'
            - '@claroline.manager.resource_manager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '%claroline.param.uploads_directory%'
            - '@security.token_storage'
            - '@Claroline\CoreBundle\Manager\Workspace\WorkspaceManager'

    Claroline\CoreBundle\Manager\EventManager:
        arguments:
            - '@kernel'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@translator'

    Claroline\CoreBundle\Manager\DataSourceManager:
        arguments:
            - '@security.token_storage'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\CoreBundle\Manager\PluginManager'

    Claroline\CoreBundle\Manager\CurlManager: ~

    Claroline\CoreBundle\Manager\CryptographyManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'

    Claroline\CoreBundle\Manager\ContentManager:
        arguments:
            - '@doctrine'
            - '@request_stack'
            - '@Claroline\AppBundle\Persistence\ObjectManager'

    Claroline\CoreBundle\Manager\ConnectionMessageManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@event_dispatcher'
            - '@Claroline\AppBundle\API\SerializerProvider'

    Claroline\CoreBundle\Manager\ApiManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\API\TransferProvider'
            - '@Claroline\CoreBundle\Library\Utilities\FileUtilities'
            - '@Claroline\AppBundle\API\Crud'

    Claroline\CoreBundle\Manager\Workspace\WorkspaceRestrictionsManager:
        arguments:
            - '@request_stack'
            - '@security.authorization_checker'
            - '@claroline.manager.workspace_manager'

    Claroline\CoreBundle\Manager\Workspace\WorkspaceManager:
        public: true
        arguments:
            - '@translator'
            - '@Claroline\AppBundle\API\Crud'
            - '@claroline.manager.role_manager'
            - '@claroline.manager.resource_manager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\CoreBundle\Manager\Tool\ToolManager'
            - '@service_container'
        calls:
            - setLogger: [ '@logger' ]

    claroline.manager.workspace_manager:
        alias: Claroline\CoreBundle\Manager\Workspace\WorkspaceManager
        public: true

    Claroline\CoreBundle\Manager\Workspace\TransferManager:
        public: true
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@claroline.manager.temp_file'
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@claroline.transfer.ordered_tool'
            - '@Claroline\AppBundle\API\Crud'
            - '@Claroline\CoreBundle\Library\Utilities\FileUtilities'
            - '@Claroline\CoreBundle\Listener\Log\LogListener'
            - '@security.authorization_checker'
        calls:
            - setLogger: [ '@logger' ]

    Claroline\CoreBundle\Manager\Workspace\Transfer\OrderedToolTransfer:
        arguments:
            - '@Claroline\CoreBundle\API\Serializer\Tool\ToolSerializer'
            - '@Claroline\CoreBundle\API\Serializer\User\RoleSerializer'
            - '@service_container'
        calls:
          - setLogger: [ '@logger' ]

    #alias is required: todo: use tags
    claroline.transfer.ordered_tool:
        alias: Claroline\CoreBundle\Manager\Workspace\Transfer\OrderedToolTransfer
        public: true

    Claroline\CoreBundle\Manager\Workspace\Transfer\Tools\ResourceManager:
        arguments:
            - '@Claroline\AppBundle\API\SerializerProvider'
            - '@Claroline\AppBundle\API\FinderProvider'
            - '@Claroline\AppBundle\API\Crud'
            - '@security.token_storage'
            - '@claroline.manager.resource_manager'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
        calls:
            - setLogger: [ '@logger' ]
        tags:
            - { name: kernel.event_listener, event: export_tool_resources, method: onExport }
            - { name: kernel.event_listener, event: import_tool_resources, method: onImport }

    #alias is required: todo: use tags
    claroline.transfer.resources:
        alias: Claroline\CoreBundle\Manager\Workspace\Transfer\Tools\ResourceManager
        public: true

    Claroline\CoreBundle\Manager\Template\PlaceholderManager:
        arguments:
            - '@security.token_storage'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\AppBundle\Manager\PlatformManager'

    Claroline\CoreBundle\Manager\Template\TemplateManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\CoreBundle\Manager\Template\PlaceholderManager'

    Claroline\CoreBundle\Manager\Task\ScheduledTaskManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\CoreBundle\API\Serializer\Task\ScheduledTaskSerializer'

    Claroline\CoreBundle\Manager\Resource\RightsManager:
        arguments:
            - '@doctrine.dbal.default_connection'
            - '@security.token_storage'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\CoreBundle\Manager\Resource\MaskManager'
            - '@service_container'
        calls:
            - setLogger: [ '@logger' ]

    claroline.manager.rights_manager:
        alias: Claroline\CoreBundle\Manager\Resource\RightsManager
        public: true

    Claroline\CoreBundle\Manager\Resource\ResourceRestrictionsManager:
        arguments:
            - '@request_stack'
            - '@claroline.manager.rights_manager'
            - '@security.authorization_checker'

    Claroline\CoreBundle\Manager\Resource\ResourceLifecycleManager:
        arguments:
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@Claroline\AppBundle\Persistence\ObjectManager'

    Claroline\CoreBundle\Manager\Resource\ResourceActionManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@security.authorization_checker'
            - '@Claroline\AppBundle\Event\StrictDispatcher'
            - '@claroline.manager.resource_manager'
            - '@Claroline\CoreBundle\API\Serializer\ParametersSerializer'

    Claroline\CoreBundle\Manager\Resource\MaskManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
        calls:
            - setLogger: [ '@logger' ]

    Claroline\CoreBundle\Manager\Organization\OrganizationManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
        calls:
            - setLogger: [ '@logger' ]

    claroline.manager.organization.organization_manager:
        alias: Claroline\CoreBundle\Manager\Organization\OrganizationManager
        public: true

    Claroline\CoreBundle\Manager\LocationManager:
        arguments:
            - '@Claroline\AppBundle\Persistence\ObjectManager'
            - '@Claroline\CoreBundle\Library\Configuration\PlatformConfigurationHandler'
            - '@Claroline\CoreBundle\Manager\CurlManager'

    Claroline\CoreBundle\Manager\PlanningManager:
        arguments:
            - '@event_dispatcher'
            - '@Claroline\AppBundle\Persistence\ObjectManager'

    Claroline\CoreBundle\Manager\FacetManager:
        arguments:
            - '@event_dispatcher'
